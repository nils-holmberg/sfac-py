### start jnb (210926)
# start base env
source ~/lib/python/anaconda3/bin/activate


### start vis (210926)
# start base env
source ~/lib/python/anaconda3/bin/activate
# create new venv with ipython kernel
conda create -n conda-vis
conda install -c conda-forge -n conda-vis ipykernel matplotlib seaborn plotly dash dash-renderer dash-html-components dash-core-components


### start exp (210926)
# start base env
source ~/lib/python/anaconda3/bin/activate


### resume nlp (210925)
# start base env
source ~/lib/python/anaconda3/bin/activate
# create new venv with ipython kernel
conda create -n conda-nlp
conda install -c conda-forge -n conda-nlp ipykernel scipy spacy
conda install -n conda-nlp pandas scikit-learn
# trained pipline, language model, in conda prompt
conda activate conda-nlp
python -m spacy download en_core_web_sm
python -m spacy download en_core_web_lg
# get sentiment analysis package
conda install -c conda-forge textblob
# start jnb and copy paste multiple cells with shift arrow keys
jupyter notebook


### resume sci (210922)
# start base env, or anaconda prompt on windows
source ~/lib/python/anaconda3/bin/activate
# update anaconda, spyder
conda update anaconda
conda install spyder=5.0.5
# update packages in env
conda update --all
# list envs
conda env list
# activate env
#conda activate conda-sci
# start jnb and copy paste multiple cells with shift arrow keys
jupyter notebook


### notebook merge (210922)
# search packages at https://anaconda.org
#conda install -c terradue -n base nbmerge
# cut and paste, nbmerge only available for python2, so..
#nbmerge file_1.ipynb file_2.ipynb file_3.ipynb > merged.ipynb


### git toggle log (210922)
# toggle log/bash.log file, show it
vim .gitignore
git add log/bash.log
# then hide again..
vim .gitignore
git rm log/bash.log
# avoid reset command, requires commit id to undo 
#git reset HEAD -- log/bash.log
bash src/compile.sh -p


### inspiration (210916)
# https://monashdatafluency.github.io/python-workshop-base/modules/working_with_data/
git clone https://github.com/MonashDataFluency/python-workshop-base.git


### notebook style (210915)
# package
conda install -n base -c conda-forge jupyterthemes
!jt -t oceans16
!jt -t oceans16 -tf merriserif -tfs 14 -nf ptsans -nfs 14
!jt -r
-nfs#notebook, font, size
-tfs#markdown
-fs#code
-ofs#output
-dfs#pandas
# jt command not found with conda install, maybe try..
!pip install jupyterthemes
# or run theme command in bash console before notebook
jt -t oceans16 -tfs 18 -fs 18 -ofs 18 -dfs 18
jupyter notebook
# theme list: chesterish, grade3, ggruvboxd, gruvboxl, monokai, oceans16, onedork, solarizedd, solarizedl
# reset theme
jt -r


### anaconda from scratch (210913)
# delete anaconda, python files
rm -rf ~/lib/python/anaconda3 ~/.local/*
# https://www.anaconda.com/products/individual-d
sh ~/lib/python/Anaconda3-2021.05-Linux-x86_64.sh
# at /home/sol-nhl/lib/python/anaconda3
source lib/python/anaconda3/bin/activate
# update packages in env
conda update --all
# list envs
conda env list
# check packages in base env, e.g. jupyter
conda list -n base | grep jup
# jupyter notebook support for multiple venvs
conda install -n base nb_conda_kernels
# create new venv with ipython kernel 
conda create -n conda-sci
# activate env, install packages
#conda activate conda-sci
conda install -n conda-sci ipykernel scipy pandas matplotlib scikit-learn
# create new venv with ipython kernel
conda create -n conda-nlp
conda install -c conda-forge -n conda-nlp ipykernel scipy spacy
# render course module, section markdown
bash src/compile.sh src/210927-sci/


### syllabus again (210913)
# tables, all required args, some new paths
bash ~/dev/bash/src/text-table.sh csv/md-table-0.csv 0 0
bash ~/dev/bash/src/text-render.sh src/md-syllabus.md tmp/syllabus.pdf /home/sol-nhl/rnd/r/education/sfac-py/fig /home/sol-nhl/rnd/r/education/sfac-py/src/md-syllabus.bib


### nlp module (210912)
# start conda base
source ~/lib/python/anaconda/bin/activate
# list venv 
conda env list
# create project level venv as clone 
conda create --name conda-nlp --clone conda-sci
# if needed, remove previous venv, however saving it for later..
#conda remove --name conda-sci --all
# activate nlp env
conda activate conda-nlp
# nlp spacy package
conda install -c conda-forge spacy
# or same effect..
#pip install -U spacy
# language pack
python -m spacy download en_core_web_sm


### render syllabus (210908)
# convert csv tables to markdown
bash ~/dev/bash/src/text-table.sh csv/md-table-1.csv 0 0
# render markdown with tables as pdf
bash ~/dev/bash/src/text-render.sh src/md-syllabus.md tmp/syllabus.pdf


### render syllabus (210901)
# render tables in markdown
Rscript src/md-tables.R csv/md-table-1.csv
# render text with tables
bash ~/dev/bash/src/text-render.sh src/syllabus.md tmp/syllabus.pdf


### nlp module (210825)
# nlp spacy package
conda install -c conda-forge spacy
or same effect..
pip install -U spacy
# language pack
python -m spacy download en_core_web_sm


### visual studio code (210825)
# snap install.. wait to finish
sudo snap install --classic code
# enable python, jupyter extensions.. ctrl+p
>ext install ms-python.python
>ext install ms-toolsai.jupyter
# connect to conda-sci env.. ctrl+shift+p
>Python: Select Interpreter


### resume after summer (210817)
# and new host weyland
source ~/lib/python/anaconda/bin/activate
# maybe update anaconda
#conda update -n base -c defaults conda
# create env, install packages
conda create --name conda-sci
# activate env, install packages
conda activate conda-sci
conda install pandas seaborn matplotlib jupyter notebook scipy scikit-learn
# start venv
source src/conda-env.sh -start conda-sci
# compile any ipynb to html
bash src/compile.sh -a
# or only specific module
#bash src/compile.sh src/210929/
# push changes to github
bash src/compile.sh -p
# stop venv
source src/conda-env.sh -stop


### course project cont (210701)
# start venv
source src/conda-resume.sh
# edit in jupyter-lab, compile all ipynb to html
bash src/compile.sh -a
# or only specific module
#bash src/compile.sh src/210929/
# push changes to github
bash src/compile.sh -p
# stop venv
source src/conda-stop.sh


### course project cont (210617)
# start conda base
source ~/lib/python/anaconda3/bin/activate
# create project level venv as clone 
conda create --name conda-sfac-py --clone conda-nlp
# if needed, remove previous venv, however saving it for later..
#conda remove --name conda-nlp --all
# start venv, jupyter-lab
#bash src/conda-resume.sh
# start sfac-py venv
conda activate conda-sfac-py
# install common packages across course modules
pip install seaborn


### spacy project (210615)
# clone project template, text categorization
python -m spacy project clone tutorials/textcat_goemotions
# fetch assets (data, weights) defined in the project.yml
cd textcat_goemotions/
python -m spacy project assets
# run a command defined in the project.yml
python -m spacy project run preprocess
# run a workflow of multiple steps in order
python -m spacy project run all


### course workflow (210615)
# start anaconda3 base
source ~/lib/python/anaconda3/bin/activate
# start nlp venv
conda activate conda-nlp
# do python coding in jupyter
jupyter-lab
# compile ipynb, push changes to github pages site
bash src/compile.sh -p
# exit nlp venv
conda deactivate
# exit base anaconda3
conda deactivate


### resume (210612)
# make sure to use spacy 3.0
https://github.com/explosion
bash ~/dev/bash/src/github-push.sh
# conda venv.. https://www.anaconda.com/products/individual
sh ~/lib/python/Anaconda3-2021.05-Linux-x86_64.sh
# at /home/sol-nhl/lib/python/anaconda3
source lib/python/anaconda3/bin/activate
# create env, install packages
conda create -n conda-nlp
# activate env, install packages
conda activate conda-nlp
conda install pandas matplotlib jupyter notebook scipy scikit-learn
# spacy package
conda install -c conda-forge spacy
or same effect..
pip install -U spacy
# language pack
python -m spacy download en_core_web_sm
pip install -U spacy[lookups]
# start notebook in home dir
jupyter notebook
# or jupyter-lab
conda install jupyterlab
jupyter-lab
# exit, quit, ctrl-c
conda deactivate
# get up an running again
cd ~/res/education/sfac-py/
source ~/lib/python/anaconda3/bin/activate
conda activate conda-nlp
jupyter notebook


### anaconda3 env (200916)
# download, unpack
sh /tmp/caml/Anaconda3-2020.07-Linux-x86_64.sh
# answer "no" on initialize.. run it
source lib/python/anaconda3/bin/activate
# create env, install packages
conda create -n tf_env tensorflow
# activate env, install packages
conda activate tf_env
conda install pandas matplotlib jupyter notebook scipy scikit-learn
# start notebook in home dir
jupyter notebook
# exit, quit, ctrl-c
conda deactivate
# get up an running again
cd ~/res/education/compute-dl/
source ~/lib/python/anaconda3/bin/activate
conda activate tf_env
jupyter notebook


### readthedocs (210528)
#
pip install sphinx
cd doc/
sphinx-quickstart
make html
# specify doc dir, point to doc/source/conf.py
> .readthedocs.yaml
geany .readthedocs.yaml 
#
bash ~/dev/bash/src/github-push.sh
# set up github webhook
#https://docs.readthedocs.io/en/stable/webhooks.html


### course website (210520)
# create github repo
bash ~/dev/bash/src/github-start.sh
# enable github pages, will create yaml which require auth and pull
git pull origin main
# update io website main index page
cat ~/dev/html/nils-holmberg.github.io/readme.md
# push updates for course and io website
bash ~/dev/bash/src/github-push.sh
# generate html files from jupyter notebook
jupyter nbconvert --to html src/nlp.ipynb; cp src/nlp.html web/210930/;


### nltk, spacy (210327)
# nltk_data to home dir, why ?
python3 -m nltk.downloader stopwords
# spacy to venv
pip install -U pip setuptools wheel
pip install -U spacy
python -m spacy download en_core_web_sm
python3 -m spacy download en_core_web_sm
 

### jupyter, venv (210327)
# probably better to install these system-wide via sudo pip3 install...
#pip install --upgrade pandas matplotlib jupyterlab scipy scikit-learn
sudo pip3 install --upgrade pandas matplotlib jupyterlab scipy scikit-learn
#jupyter lab extensions
pip install ipywidgets
jupyter nbextension enable --py widgetsnbextension
jupyter labextension install @jupyter-widgets/jupyterlab-manager
# quick and dirty setup
python3 -m venv --system-site-packages ~/lib/python/venv-nlp
source ~/lib/python/venv-nlp/bin/activate
pip install --upgrade pip
# installs to venv ?
pip install --upgrade nltk
# installs to user .local ?
pip3 install -U nltk
#
jupyter-lab
#deactivate







